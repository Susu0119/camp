<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.m4gi.mapper.UserMypageReservationsMapper">

	<!-- 이용 예정인 예약 목록 조회 -->
    <select id="selectOngoingReservations" resultType="com.m4gi.dto.UserMypageReservationsDTO">
        SELECT *
<!--             r.reservation_id AS reservationId, -->
<!--             c.campground_name AS campgroundName, -->
<!--             c.addr_full AS addrFull, -->
<!--             r.reservation_date AS reservationDate, -->
<!--             r.end_date AS endDate, -->
<!--             r.total_price AS totalPrice, -->
<!--             r.reservation_status AS reservationStatus -->
        FROM
            reservations r
        JOIN campground_sites s ON r.reservation_site = s.site_id
        JOIN campgrounds c ON s.campground_id = c.campground_id
        WHERE
            r.provider_code = #{providerCode}
            AND r.provider_user_id = #{providerUserId}
             AND r.reservation_status = 1 
             AND r.checkin_status = 1
<!--              -> 예약중인 것만 조회 -->
        ORDER BY r.reservation_date ASC
    </select>
    
    <!-- 예약 취소 처리 -->
    <update id="updateReservationCancel">
	    UPDATE reservations
	    SET 
	        cancel_reason = #{cancelReason},
	        refund_status = #{refundStatus},
	        requested_at = #{requestedAt},
	        reservation_status = 2,
	        updated_at = NOW()
	    WHERE reservation_id = #{reservationId}
	</update>
	
	<!-- 예약 취소/환불 내역 조회 -->
	 <select id="getCanceledReservations" resultType="com.m4gi.dto.CanceledReservationsDTO">
	   SELECT 
        c.campground_name AS campgroundName,
        cs.site_name AS siteName,
        r.reservation_date AS reservationDate,
        r.refunded_at AS refundedAt,
         r.refund_status AS refundStatus
    FROM reservations r
    JOIN campground_sites cs ON r.reservation_site = cs.site_id
    JOIN campgrounds c ON cs.campground_id = c.campground_id
    WHERE 
        r.provider_code = #{providerCode}
        AND r.provider_user_id = #{providerUserId}
        AND r.reservation_status = 2
        AND r.refunded_at IS NOT NULL
    ORDER BY r.refunded_at DESC
  </select>
  
<select id="findUserReservationsByDate" resultType="com.m4gi.dto.UserMypageReservationsDTO">
    SELECT
        r.reservation_id,
        c.campground_name,
        c.addr_full,
        r.reservation_date,
        r.end_date,
        r.total_price,
        r.reservation_status
    FROM reservations r
    JOIN campground_sites cs ON r.reservation_site = cs.site_id
    JOIN campgrounds c ON cs.campground_id = c.campground_id
    WHERE DATE(r.reservation_date) = #{targetDate}
</select>


<select id="selectReservationAlerts" resultType="com.m4gi.dto.ReservationAlertDTO">
    SELECT 
        reservation_id,
        reservation_site,
        reservation_date,
        end_date,
        DATEDIFF(reservation_date, CURDATE()) AS days_left
    FROM reservations
    WHERE provider_code = #{providerCode}
      AND provider_user_id = #{providerUserId}
      AND reservation_status IN (1, 2) -- 예: 예약 완료 상태
      AND reservation_date BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY)
    ORDER BY reservation_date ASC
</select>

<!-- 이용 완료 예약 목록 조회 -->
<select id="getCompletedReservations" resultType="com.m4gi.dto.UserMypageReservationsDTO">
    SELECT
        reservation_id,
        provider_code,
        provider_user_id,
        reservation_site,
        reservation_date,
        end_date,
        reservation_status,
        total_price,
        checkin_time,
        checkout_time,
        checkin_status
    FROM reservations
    WHERE provider_code = #{providerCode}
      AND provider_user_id = #{providerUserId}
      AND checkin_status = 3
    ORDER BY checkout_time DESC
</select>

  
	    
</mapper>